<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd 
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd">

	<!-- 通过线程池的方式整合单台redis -->
	<bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxTotal" value="${redis.maxTotal}"/>
		<property name="maxIdle" value="${redis.maxIdle}"/>
		<property name="minIdle" value="${redis.minIdle}"/>
	</bean>

	<!-- 通过工厂模式创建jedis连接 
		需要指定host主机和端口号
	-->
	<bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
		<property name="hostName" value="${redis.host}"/>
		<property name="port" value="${redis.port}"/>
		
		<!-- 引入线程池的配置 -->
		<property name="poolConfig" ref="poolConfig"/>
	</bean>

	<!-- 配置SpringJedisTemplate Spring操作redis的模板工具API -->
	<bean id="redisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">
		<!-- 配置redis工厂 -->
		<property name="connectionFactory" ref="jedisConnectionFactory"/>
	</bean>

	<!-- Spring 管理Jedis 
		name="构造参数的名称"
		index="构造参数的位置"
		总结：构造注入时使用index不要用name
			Java只维护形参的数据类型，不会维护形参的名称，
			通过name属性进行构造注入，可能产生风险，建议使用index
			
		type类型说明：
			一般情况下，Spring会自动维护参数类型，所以可以省略不写
			但是如果类中的构造方法重载过多，可能参数类型个数相同的情况
			需要指定参数类型，Spring根据特定的参数实现构造注入
	-->
	<!-- 
	<bean id="jedis" class="redis.clients.jedis.Jedis">
		<constructor-arg index="0" value="${redis.host}" type="java.lang.String"/>
		<constructor-arg index="1" value="${redis.port}" type="int"/>
	</bean>
	 -->
	
</beans>